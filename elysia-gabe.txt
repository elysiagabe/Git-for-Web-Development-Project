https://codepen.io/elysia-gabe/pen/KKwedew?editors=1100


Review Questions: 

    1. What is Semantic HTML? 
        Semantic HTML means that the HTML markup reflects the meaning of your web page's content, not just the appearance. For example, the <nav> tags indicates the conetent between is a navigation section. 

    2. What is HTML used for? 
        HTML stands for Hyper Text Markup Language. It's the standard language for creating web pages and it describes the structure and content of a web page.

    3. What is an attribute and where do we put it? 
        Attributes provide additional information about an element. Some are required, like the href attribute for <a> elements. They're always placed in the opening tag of the element in question. 

    4. What is the h1 tag used for? How many times should I use it on a page?
        The h1 tag is typically reserved for the title of the page and should be used only once. 

    5. Name two tags that have required attributes
        <img> and <a>

    6. What do we put in the head of our HTML document? 
        We place metadata about the page in the head of our HTML document. This includes information like the document title, links to external style sheets, etc.

    7. What is an id? 
        An id is an attribute that specifies a unique identifier of an HTML element and can be used to perform specific tasks or styles in JavaScript or CSS.

    8. What elements can I add an id to? 
        Any HTML element.

    9. How many times can I use the same id on a page? 
        Only once. 

    10. What is a class? 
        A class is an attribute that can be applied to multiple HTML elements and can be used by CSS to style multiple elements in the same way.

    11. What elements can I add a class to? 
        Any HTML element. 

    12. How many times can I use the same class on a page? 
        As many times as necessary. 

    13. How do I get my link to open in a new tab?
        Use the target attribute with the value _blank, as shown below:
        <a href="URL" target="_blank">LINK</a>

    14. What is the alt attribute used for? 
        The alt attribute provides a text description of an image and is required for <img> tags. The alt description will display if an image is unable to load and will be used if a user is accessing the page with a screen reader. It's important for accessibility and can help SEO as well. 

    15. How do I reference an id?
        With a hashtag. For example: 
        #id {
            property: value;
        }

    16. What is the difference between a section and a div?
        A section is a semantic HTML tag and conveys that the content within the section tags are related to each other and make up one section of the page. A div tag, on the other hand, is not semantic HTML. It groups content based on style/appearance rather than on meaning. 

    17. What is CSS used for? 
        CSS is used to style HTML content.  

    18. How do we select an element? Example - every h2 on the page
        Using h2 as an example: 
        h2 {
            property: value;
        }

    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        Classes can be applied to multiple elements, but an id is a unique identified and can only be used once (applied to one element on the page). Ids are commonly used with anchor tags to jump to a specific section of the page using navigation links. Classes are often used to apply the same style to multiple elements. For example, you could give all the elements in a section the same class and use that to make them all have the same font size. 

    20. How do we select classes in CSS?
        With a dot. For example: 
        .class {
            property: value;
        }

    21. How do we select a p element with a single class of “human””?
        human p {
            property: value;
        }

    22. What is a parent child selector? When would this be useful? 


    23. How do you select all links within a div with the class of sidebar?
        .sidebar {
            property: value;
        }

    24. What is a pseudo selector?
        A pseudo selector targets an element in a specific state. For example, a:hover would target anchor links when a user hovers over them.

    25. What do we use the change the spacing between lines?
        We could use the line-height property. 

    26. What do we use to change the spacing between letters?
        We use the letter-spacing property. 

    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        CAPITALS --> text-transform: uppercase;
        lowercase --> text-transform: lowercase;
        Capitalize --> text-transform: capitalize;
        
    28. How do I add a 1px border around my div that is dotted and black?
        div {
            border: 1px dotted black;
        }

    29. How do I select everything on the page? 
        * {
            property: value;
        }
        Or could typically use the body selector instead of the asterisk. 

    30. How do I write a comment in CSS?
        /* This is a comment in CSS */

    31. How do I find out what file I am in, when I am using the command line? 
        pwd

    32. Using the command line - how do I see a list of files/folders in my current folder?
        ls

    33. How do I remove a file via the command line? Why do I have to be careful with this? 
        rm filename
        The remove command deletes the specified file without any confirmation prompt, and it's not possible to recover removed files. 

    34. Why should I use version control? 
        Version control allows you to access earlier versions of your file. This is very helpful in case you make a mistake or delete a file and need to recover your work. Distributed version control, like git, also makes it a lot easier to collaborate as a team. Plus, because it's distributed, you won't lose your project history if something happens to the central server. 

    35. How often should I commit to github?
        I'm not aware of any hard and fast rules about this, but you should commit once you've made significant changes to your project. Definitely at a point where you wouldn't want to lose any progress if something happened!

    36. What is the command we would use to push our repo up to github? 
        git push

    37. Walk me through Lambda's git flow. 
        Step 1: Create your own version of the repo (i.e., fork)
            (To double check, file should say yourname/projectname forked from Lambda School/projectname)
        Step 2: Add TL as collaborator (via settings>collaborator)
        Step 3: Clone the repo (run git clone command)
        Step 4: Create your own branch (run git checkout -b 'firstName-lastName')
            (To double check, run git branch command)
        Step 5: Work on the project and add, commit and push changes to your branch 
        Step 6: Submit pull request (use your own fork as base-fork / compare across forks)
        Step 7: Add TL as reviewer on the pull request
        Step 8: To be completed by TL --> TL will conduct a review of the code and then accept the changes. Project will be complete when merged back into master.

Stretch  Questions: 
    1. What is the difference between an inline element and a block element? 
        Block elements stack on top of each other like blocks with breaks before and after each block. Inline elements, on the other hand, do not create line breaks. 

    2. What happens when an element is positioned absolutely? 
        An element that is positioned absolutely is positioned relative to the first parent that has a relative position (instead of being positioned relative to the browser viewport, like fixed). They're neither affected by nor do they affect other elements in the normal flow of the page. 

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width?
        element {
            display: inline-block;
        }

    4. Name 3 elements that are display block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        block: divs, p's, headers
        inline: links, images
        inline-block: button

    5. In your own words, explain the box model. What is the fix for the box model? 
        Box model essentially means that there's concentric boxes surrounding every HTML element. It's made up of the following: 
            1. The content itself (innermost box)
            2. Padding (transparent space between the content and border)
            3. border
            4. Margin (transparent space just outside of the border)
        The problem with the box model is that, if you specify the width or height of an element, that's only going to adjust the size of the content and does not account for any padding, borders or margins you may add. In other words, it's not accounting for all the space the whole box is taking up, so you'd have to keep this in mind and do weird calculations every time you were adjusting the display of the webpage or risk breaking the layout. However, you can fix this with the following global CSS code: 
            * {
                box-sizing: border-box; 
            }

---

    6. What's a merge conflict and how do you resolve it? 
        Merge conflicts occur when git can't automatically resolve difference between two or more different commits. This would typically happen when commits are trying to make different changes to the same lines of code or files, e.g., one developer modifies a file and another deletes it. When merge conflicts happen, you won't be able to merge pull requests. You may be able to resolve the conflict(s) directly in GitHub using their Conflict Editor otherwise you'll need to fix the issue(s) in your local repo and then try pushing the changes again. 

    7. Research Git commands pull, rebase and merge. 
        git pull: updates your local repo from the remote repo...this command will fetch any new commits made on other branches and merge them into your local branch...you're basically pulling the changed code to your local branch that others have pushed

        git rebase: changes the base of your branch from one commit to another...will appear as if you created your branch at a different commit...helps maintain a cleaner history (vs. pulling all changes and superfluous commits that took place)

        git merge: puts a forked history back together...often used to merge commits/changes from one branch back into master

    8. Research Git commands reset, revert and clean. 
        git reset: resets a file or branch to a specified state...i.e., can revert chunks of content, unstage a file, or change your branch back to a previous commit

        git revert: undoes a commit but adds a note in the history...you don't lose history as you would with a git reset, so can be safer to use when working on a repo with others

        git clean: another 'undo' command but for untracked files 

    9. Research & set up GUI Git console. 
        Done! Downloaded and set up Sourcetree. 

    10. Research and setup SSH keys with GitHub, so you don't need ot input username/pw every time you push. 
        Done! Added to GithHub. 